# coding:utf-8
# *******************************************************************
# * Copyright 2021-2080 evilbinary
# * 作者: evilbinary on 01/01/20
# * 邮箱: rootdebug@163.c",om
# ********************************************************************
import os
import SCons

Import('env')

cflags = ''

source = []

current = Dir('.').srcnode().path

returns=[]

def config_build():
    params = [env['CC'],
              'CROSS_COMPILE='+env['CC_PREFIX'],
              'CFLAGS=-g -Wno-error=pointer-sign -DSYSCALL_NO_TLS %s' % (
        env['CFLAGS']),
        '--disable-optimize --enable-debug=yes'
    ]

    configured = env.AutoConfig(Dir('.'),
                                AutoConfigParams=params,
                                AutoConfigTarget='config.mk',
                                AutoConfigSource='configure'
                                )

    env.Command('./config.mak-'+env.get('ARCHTYPE'),configured,'cd %s && make clean && cp ./config.mak ./config.mak-%s' %
                (current, env.get('ARCHTYPE')))
    musl=env.Command('musl',
            configured,
            'cd %s && make -j8 && cp lib/libc.a lib/libmusl.a' % (current))

    returns.append(musl)

if os.path.exists('config.mak'):
    print('configure is up-to-date')
    if not os.path.exists('config.mak-'+env.get('ARCHTYPE')):
        print('remove configure')
        os.remove('config.mak')
        config_build()
else:
    config_build()


Return('returns')
